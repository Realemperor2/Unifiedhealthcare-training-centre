"use client"

import { useState, useEffect } from 'react'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'

interface HistoricalData {
  date: string
  temperature: number
  pressure: number
  viscosity: number
}

const generateHistoricalData = (): HistoricalData[] => {
  const data: HistoricalData[] = []
  const now = new Date()
  for (let i = 30; i > 0; i--) {
    const date = new Date(now.getTime() - i * 24 * 60 * 60 * 1000)
    data.push({
      date: date.toISOString().split('T')[0],
      temperature: Math.random() * 100 + 150,
      pressure: Math.random() * 50 + 50,
      viscosity: Math.random() * 500 + 500
    })
  }
  return data
}

export default function HistoricalDataAnalysis() {
  const [historicalData, setHistoricalData] = useState<HistoricalData[]>([])
  const [selectedMetric, setSelectedMetric] = useState<'temperature' | 'pressure' | 'viscosity'>('temperature')

  useEffect(() => {
    // In a real application, this would fetch data from a backend API
    setHistoricalData(generateHistoricalData())
  }, [])

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle>Historical Data Analysis</CardTitle>
        <CardDescription>Analyze trends in material processing data</CardDescription>
      </CardHeader>
      <CardContent>
        <div className="mb-4">
          <Select onValueChange={(value: 'temperature' | 'pressure' | 'viscosity') => setSelectedMetric(value)}>
            <SelectTrigger className="w-[180px]">
              <SelectValue placeholder="Select metric" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="temperature">Temperature</SelectItem>
              <SelectItem value="pressure">Pressure</SelectItem>
              <SelectItem value="viscosity">Viscosity</SelectItem>
            </SelectContent>
          </Select>
        </div>
        <ResponsiveContainer width="100%" height={300}>
          <LineChart data={historicalData}>
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="date" />
            <YAxis />
            <Tooltip />
            <Legend />
            <Line type="monotone" dataKey={selectedMetric} stroke="#8884d8" />
          </LineChart>
        </ResponsiveContainer>
      </CardContent>
    </Card>
  )
}

